{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","collapse","isOpen","fluid","dark","expand","className","onClick","id","navbar","left","to","icon","size","style","fontSize","right","minHeight","overflowX","lg","bottom","marginTop","md","alt","title","map","item","idx","fab","e","url","preventDefault","window","open","focus","openInTab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wOA+HeA,EAxHH,WAAM,IAAD,EACSC,mBAAS,IADlB,mBACXC,EADW,KACDC,EADC,KAuCf,OACE,cAAC,IAAD,UAEE,eAAC,IAAD,CAAcC,OAAK,EAAnB,UAEA,eAAC,IAAD,CAAWC,MAAI,EAACC,OAAO,KAAvB,UACE,cAAC,IAAD,UACI,wBAAQC,UAAU,aAAlB,uBAEJ,cAAC,IAAD,CAAkBC,QA7CH,WACrBL,GAAQD,MA6CF,eAAC,IAAD,CAAaO,GAAG,kBAAkBN,OAAQD,EAAUQ,QAAM,EAA1D,UACE,cAAC,IAAD,CAAcC,MAAI,EAAlB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYC,GAAG,WAAf,UACE,cAAC,IAAD,CAASC,KAAK,OAAON,UAAU,OAAOO,KAAK,OAC3C,sBAAMC,MAAO,CAACC,SAAS,QAAvB,yBAIN,cAAC,IAAD,CAAcC,OAAK,EAAnB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYL,GAAG,WAAf,UACE,cAAC,IAAD,CAASC,KAAK,YAAYN,UAAU,OAAOO,KAAK,OAChD,sBAAMC,MAAO,CAACC,SAAS,QAAvB,qCASV,cAAC,IAAD,CAAcZ,OAAK,EAACW,MAAO,CAACG,UAAU,QAAQC,UAAU,UAAxD,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQC,GAAG,IAAX,mBAGA,cAAC,IAAD,CAAQA,GAAG,IAAX,wBAQJ,cAAC,IAAD,CAAWL,MAAO,CAACM,OAAO,IAAKC,UAAU,QAAzC,SACE,cAAC,IAAD,CAAcf,UAAU,gCAAxB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAQa,GAAG,IAAIG,GAAG,IAAlB,UACE,oBAAIhB,UAAU,QAAd,4BACA,2GAKF,eAAC,IAAD,CAAQa,GAAG,IAAIG,GAAG,IAAlB,UACE,oBAAIhB,UAAU,QAAd,2CAlFA,CACZ,CACEM,KAAK,WACLW,IAAI,sCACJC,MAAM,sCACNlB,UAAU,qBAEZ,CACEM,KAAK,UACLW,IAAI,UACJC,MAAO,iCACPlB,UAAU,0BAEZ,CACEM,KAAK,YACLW,IAAI,YACJC,MAAM,uCACNlB,UAAU,4BAEZ,CACEM,KAAK,WACLW,IAAI,WACJC,MAAM,6DACNlB,UAAU,4BA6DQmB,KAAI,SAACC,EAAKC,GAAN,OAEN,cAAC,IAAD,CAASC,KAAG,EACZrB,QAAS,SAAAsB,GAAC,OA7FZ,SAACC,EAAID,GACrBA,EAAEE,iBACQC,OAAOC,KAAKH,GAClBI,QA0F4BC,CAAUT,EAAKF,MAAMK,IACnCvB,UAAWoB,EAAKpB,UAChBM,KAAMc,EAAKd,KACXW,IAAKG,EAAKH,IACVC,MAAOE,EAAKF,MACZX,KAAK,MACAc,sBCrGVS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4BCIdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.98a7c3cf.chunk.js","sourcesContent":["import React, {useState}from \"react\";\nimport {\nMDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBFormInline,\nMDBIcon, MDBContainer, MDBFooter, MDBCol, MDBRow\n} from \"mdbreact\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst App = () =>{\nconst[collapse, isOpen] = useState('');\n\nconst toggleCollapse = () => {\n  isOpen(!collapse);\n}\n\nconst openInTab = (url,e)=>{\n  e.preventDefault();\n  var win = window.open(url);\n  win.focus();\n}\n\nconst icons = [\n  {\n    icon:'facebook',\n    alt:'https://www.facebook.com/prajoshwas',\n    title:'https://www.facebook.com/prajoshwas',\n    className:\"custom-fab-fb p-3\",\n  },\n  {\n    icon:'twitter',\n    alt:'twitter',\n    title: 'https://twitter.com/prajoshwas',\n    className:\"custom-fab-twitter p-3\", \n  },\n  {\n    icon:'instagram',\n    alt:'instagram',\n    title:'https://www.instagram.com/jshugatan/',\n    className:\"custom-fab-instagram p-3\",\n  },\n  {\n    icon:'linkedin',\n    alt:'linkedin',\n    title:'https://www.linkedin.com/in/joshua-mark-sugatan-652882156/',\n    className:\"custom-fab-linkedin p-3\",\n  },\n]\n  return (\n    <Router>\n\n      <MDBContainer fluid>\n      {/* navbar */}\n      <MDBNavbar dark expand=\"md\">\n        <MDBNavbarBrand>\n            <strong className=\"white-text\">Profile</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler onClick={toggleCollapse} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={collapse} navbar>\n          <MDBNavbarNav left>\n            <MDBNavItem>\n              <MDBNavLink to=\"/profile\">\n                <MDBIcon icon=\"home\" className=\"pr-2\" size='lg'></MDBIcon>\n                <span style={{fontSize:'16px'}}>Home</span>\n              </MDBNavLink>\n            </MDBNavItem>\n          </MDBNavbarNav>\n          <MDBNavbarNav right>\n            <MDBNavItem>\n              <MDBNavLink to=\"/profile\">\n                <MDBIcon icon=\"phone-alt\" className=\"pr-2\" size=\"lg\"></MDBIcon>\n                <span style={{fontSize:'16px'}}>Contact Me</span>\n              </MDBNavLink>\n            </MDBNavItem>\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBNavbar>\n\n      {/* body */}\n\n      <MDBContainer fluid style={{minHeight:'100vh',overflowX:'hidden'}}>\n        <MDBRow>\n          <MDBCol lg=\"6\">\n            Col 1\n          </MDBCol>\n          <MDBCol lg=\"6\">\n            Col 2\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      {/* end of body */}\n\n      {/* footer */}\n      <MDBFooter style={{bottom:'0', marginTop:'auto'}}>\n        <MDBContainer className=\"py-3 text-center text-md-left\">\n          <MDBRow>\n            <MDBCol lg=\"6\" md=\"6\">\n              <h5 className=\"title\">Footer Content</h5>\n              <p>\n                Here you can use rows and columns here to organize your footer\n                content.\n              </p>\n            </MDBCol>\n            <MDBCol lg=\"6\" md=\"6\">\n              <h5 className=\"title\">Contact Me on the following :</h5>\n              {\n                icons.map((item,idx) =>\n                (\n                    <MDBIcon fab \n                    onClick={e => openInTab(item.title,e)}\n                    className={item.className} \n                    icon={item.icon} \n                    alt={item.alt} \n                    title={item.title}\n                    size=\"3x\"\n                    key={idx}>\n                    </MDBIcon>\n                ))\n              }\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      \n        </MDBFooter>\n      </MDBContainer>\n    </Router>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./assets/scss/mdb-free.scss\"\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}